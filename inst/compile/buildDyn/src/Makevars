# Location of CUDA program
CUDA_HOME = /usr/local/cuda

# Location of R package library
R_HOME = /home/rho/R/x86_64-pc-linux-gnu-library/4.2

# Cpp compiler location
CXX = /usr/bin/g++

# Shared libs using name automatically expected in Rcpp package compilation
PKG_LIBS= -L/usr/local/cuda/lib64 -Wl,-rpath,/usr/local/cuda/lib64 -lcudart


#########################################

# Headers for R 
R_INC = /usr/share/R/include

# Specific Rcpp headers
RCPP_INC = $(R_HOME)/Rcpp/include

# NVCC compiler, required to compiled .cu files
NVCC = $(CUDA_HOME)/bin/nvcc

# CUDA headers
CUDA_INC = $(CUDA_HOME)/include

# CUDA library
CUDA_LIB = $(CUDA_HOME)/lib64

# Libs needed for linking .o objects compiled from .cu and .cpp files 
LIBS = -lcudart -d

# Flags needed in nvcc compilation from .cu to .o
NVCC_FLAGS = -Xcompiler "-fPIC" -g -O3 -std=c++17 --diag-suppress 177 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_60,code=sm_60 -gencode arch=compute_70,code=\"compute_70,sm_70\"

# Flags needed in g++ compilation from .cpp to .o
CPP_FLAGS = -fPIC -g -O3 -std=c++17 -ffile-prefix-map=/build/r-base-6fXXT3/r-base-4.2.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2


### Define objects
cu_sources := $(wildcard *cu)
cu_sharedlibs := $(patsubst %.cu, %.o,$(cu_sources))

cpp_sources := $(wildcard *.cpp)
cpp_sharedlibs := $(patsubst %.cpp, %.o, $(cpp_sources))

OBJECTS = $(cu_sharedlibs) $(cpp_sharedlibs)

all : CCxAAAA.so

CCxAAAA.so: $(OBJECTS)

%.o: %.cpp $(cpp_sources)
	$(CXX) $(CPP_FLAGS) -I$(RCPP_INC) -I$(R_INC) $< -c

%.o: %.cu $(cu_sources)
	$(NVCC) $(NVCC_FLAGS) -I$(RCPP_INC) -I$(R_INC) -I$(CUDA_INC) $< -c
