% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_matrix_arg_refs.R
\name{get_matrix_arg_refs}
\alias{get_matrix_arg_refs}
\title{Retrieve argument references for a matrix function}
\usage{
get_matrix_arg_refs(
  expr_chars,
  matrix_fun_str,
  var_names,
  allocate_intermediate_exprs
)
}
\arguments{
\item{expr_chars}{A character string representing the unparsed expression
for which the argument references are to be retrieved.}

\item{matrix_fun_str}{A character string representing the matrix function
itself, this is needed only to identify the arguments' starting locations.}

\item{var_names}{A character vector that represents the the named R variables
included in these commands.}

\item{allocate_intermediate_exprs}{A Boolean indicating whether intermediate
evaluations should be allocated and returned as additional lines of code
that must be executed prior to the parsed argument references being used.
If this is false, it means the call is being used only to parse dimensional
information and not as part of the top level parsing call used to generate
the actual code in the kernel function.}
}
\value{
List of two character vectors, with named value 'additional_lines'
representing the lines of code needed to ensure the intermediate evaluation 
arguments are correct, if applicable, and the named value 'parsed_args' 
representing the names of the Rvar structures to be used as the arguments
to the current matrix expression.
}
\description{
Identify the argument references of a matrix function call, note that these
may be either default global Rvar references, or intermediate eval references
that exist only to store intermediate evaluations inside nested matrix
function calls.  Note that this may also return additional lines of text
that must be evaluated prior to the current expression
}
\examples{
get_matrix_arg_refs(expr_chars, matrix_fun_str, var_names, 
                    allocate_intermediate_exprs)
}
