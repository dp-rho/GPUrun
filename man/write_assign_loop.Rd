% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_assign_loop.R
\name{write_assign_loop}
\alias{write_assign_loop}
\title{Writes code to assign an expression's return value}
\usage{
write_assign_loop(
  var_index,
  eval_expr,
  var_mapping = c(GPU_MAPPING, CPU_MAPPING, GPU_INTERMEDIATE_EVAL_MAPPING,
    CPU_INTERMEDIATE_EVAL_MAPPING)
)
}
\arguments{
\item{var_index}{An integer value indicating which Rvar is to be updated}

\item{eval_expr}{The expression that will be evaluated and the corresponding 
return value will be stored in the indicated Rvar}

\item{var_mapping}{A character string which controls which
type of memory and Rvar is parsed.  The memory may be accessible on either 
the GPU or the CPU, but not both, and the Rvar may be part of the global 
array that holds all R variables read into memory, or part of the intermediate
evaluations array used to store intermediate evaluation matrix arguments.}
}
\value{
Character vector representing the machine generated code necessary
to evaluate the expression and store the results in the indicated Rvar
}
\description{
Writes machine generated code to store evaluated expression in
a temporary shared array until all elements have been evaluated, then 
update the indicated Rvar with the evaluated data
}
\examples{
write_assign_loop(var_index, eval_expr)
}
