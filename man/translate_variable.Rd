% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/translate_variable.R
\name{translate_variable}
\alias{translate_variable}
\title{Translate the inputs to a specific index of a compiled Rvar data}
\usage{
translate_variable(
  var_num,
  mod_len = TRUE,
  index = c(EVAL_DATA_INDEX, SHARED_MEM_INDEX, DEFAULT_INDEX, LOOP_ITER_VARS),
  var_mapping = c(GPU_MAPPING, CPU_MAPPING, GPU_INTERMEDIATE_EVAL_MAPPING,
    CPU_INTERMEDIATE_EVAL_MAPPING)
)
}
\arguments{
\item{var_num}{An integer representing the Rvar index in one of the compiled
global Rvar arrays.}

\item{mod_len}{A Boolean indicating whether modulus needs to be applied
on the data index to prevent array overflow in the compiled data}

\item{index}{An integer representing the index of data to be retrieved}

\item{var_mapping}{A character string representing the name of the compiled
global array in which the Rvar will be identified}
}
\value{
A character string representing the compiled code necessary to
retrieve the specified index from the specified Rvar's data.
}
\description{
Use the variable id number, a modulus Boolean, the index to retrieve
and the type of Rvar being requested to create compiled code that will return
a double value retrieved from the Rvar data specified by input arguments.
}
\examples{
translate_variable(var_num, mod_len, index, var_mapping)
}
